name: Amend dependabot PRs

on:
  workflow_run:
    workflows: [Trigger workflow event for dependabot PRs]
    types: [completed]

jobs:
  python-lockfiles:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Prepare python ${{ matrix.python-version }} ${{ matrix.deps-flavor }} dependancies lockfile for PRs validation on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        deps-flavor: [default, minimal]
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3.5.2
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
      - uses: actions/setup-python@v4.6.1
        with:
          cache: pip
          cache-dependency-path: .github/requirements-prs/${{ matrix.deps-flavor }}--${{ matrix.os }}--${{ matrix.python-version }}.lock
          check-latest: true
          python-version: ${{ matrix.python-version }}
      - run: python -m pip install -r .github/requirements-venv.lock
      - run: python -m hatch --verbose env create ${{ matrix.deps-flavor }}
      - name: Freeze dependencies from a fresh environment
        if: matrix.os == 'macos-latest'
        run: |
          source "$( python -m hatch env find ${{ matrix.deps-flavor }} )/bin/activate"
          python -m pip freeze --all --exclude-editable > .github/requirements-prs/${{ matrix.deps-flavor }}--${{ matrix.os }}--${{ matrix.python-version }}.lock
      - name: Freeze dependencies from a fresh environment
        if: matrix.os == 'ubuntu-latest'
        run: |
          source "$( python -m hatch env find ${{ matrix.deps-flavor }} )/bin/activate"
          python -m pip freeze --all --exclude-editable > .github/requirements-prs/${{ matrix.deps-flavor }}--${{ matrix.os }}--${{ matrix.python-version }}.lock
      - name: Freeze dependencies from a fresh environment
        if: matrix.os == 'windows-latest'
        run: |
          . "$( python -m hatch env find ${{ matrix.deps-flavor }} )/Scripts/Activate.ps1"
          python -m pip freeze --all --exclude-editable > .github/requirements-prs/${{ matrix.deps-flavor }}--${{ matrix.os }}--${{ matrix.python-version }}.lock
      - if: success() || failure()
        uses: actions/upload-artifact@v3.1.2
        with:
          name: requirements-prs--${{ github.sha }}
          path: .github/requirements-prs/${{ matrix.deps-flavor }}--${{ matrix.os }}--${{ matrix.python-version }}.lock
  yarn-lockfile:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Prepare yarn lockfile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.5.2
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
      - uses: actions/setup-node@v3.6.0
        with:
          check-latest: true
          node-version: 20.2
      - run: corepack enable
      - run: corepack prepare yarn@stable --activate
      - uses: actions/cache@v3.3.1
        with:
          key: ${{ hashFiles('docs/yarn.lock') }}
          path: docs/.yarn/cache
      - run: yarn install --no-immutable
        working-directory: docs
      - if: success() || failure()
        uses: actions/upload-artifact@v3.1.2
        with:
          name: yarn-lock--${{ github.sha }}
          path: docs/yarn.lock
  amend-prs:
    name: Amend dependabot PR with uptodate lockfiles
    needs: [python-lockfiles, yarn-lockfile]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.5.2
        with:
          fetch-depth: 0
          ref: ${{ github.event.workflow_run.head_branch }}
      - uses: actions/download-artifact@v3.0.2
        with:
          name: requirements-prs--${{ github.sha }}
          path: .github/requirements-prs
      - uses: actions/download-artifact@v3.0.2
        with:
          name: yarn-lock--${{ github.sha }}
          path: docs
      - uses: EndBug/add-and-commit@v9.1.3
        with:
          author_name: ${{ github.event.workflow_run.head_commit.author.name }}
          author_email: ${{ github.event.workflow_run.head_commit.author.email }}
          commit: --amend
          message: "${{ github.event.workflow_run.head_commit.message }}"
          push: --force
      - uses: actions-ecosystem/action-add-labels@v1.1.3
        with:
          labels: merge:queue
          number: ${{ github.event.workflow_run.pull_requests[0].number }}
